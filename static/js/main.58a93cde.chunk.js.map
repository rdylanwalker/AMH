{"version":3,"sources":["context/AuthProvider/AuthProvider.tsx","components/LoadingButton.tsx","App/AppHeader/AppHeader.tsx","App/LoginPage/LoginPage.tsx","components/ProtectedRoute.tsx","App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["AuthContext","createContext","undefined","AuthProvider","children","useState","currentUser","setCurrentUser","signInTimer","useRef","signOutTimer","loginPromise","signIn","useCallback","loginVars","onSuccess","a","current","CancelablePromise","resolve","window","setTimeout","name","signOut","useEffect","clearTimeout","cancel","Provider","value","useAuth","authContext","useContext","Error","useStyles","makeStyles","buttonProgress","progressSize","size","parseInt","position","top","left","marginTop","marginLeft","LoadingButton","loading","CircularProgressProps","circularProgressProps","props","classes","style","display","alignItems","Button","variant","disabled","CircularProgress","className","AppHeader","toggleTheme","theme","useTheme","setLoading","history","useHistory","AppBar","Toolbar","Box","mr","IconButton","edge","color","aria-label","Menu","flexGrow","clone","Typography","Tooltip","title","onClick","palette","type","Brightness7","Brightness4","ml","push","loginContainerRoot","loginCardRoot","alignSelf","backgroundColor","background","paper","padding","spacing","loginCardContentRoot","loginCardActionsRoot","justifyContent","LoginPage","location","useLocation","useForm","mode","defaultValues","username","password","formState","errors","handleSubmit","control","handleLogin","fieldValues","state","from","pathname","replace","Container","maxWidth","root","Card","elevation","CardHeader","textAlign","CardContent","id","autoComplete","onSubmit","rules","required","render","onChange","onBlur","ref","TextField","fullWidth","label","margin","error","helperText","message","inputRef","CardActions","isSubmitting","isValid","form","PrivateRoute","rest","to","container","height","width","overflow","flexDirection","App","prefersDarkMode","useMediaQuery","localStorage","getItem","darkTheme","setDarkTheme","React","useMemo","createMuiTheme","setItem","toString","ThemeProvider","CssBaseline","basename","prev","ProtectedRoute","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58a93cde.chunk.js","sourcesContent":["import React, {\n  createContext, PropsWithChildren, useCallback, useContext, useEffect, useRef, useState,\n} from 'react';\nimport { CancelablePromise, CancelablePromiseType } from 'cancelable-promise';\nimport { LoginVars, User } from '../../types';\n\ntype LoginFunction = (loginVars: LoginVars, onSuccess?: (args?: any[]) => void) => void;\ntype LogoutFunction = (onSuccess?: (args?: any[]) => void) => void;\n\ninterface AuthContextState {\n  currentUser: User | null;\n  signIn: LoginFunction;\n  signOut: LogoutFunction;\n}\n\nconst AuthContext = createContext<AuthContextState | undefined>(undefined);\n\nexport function AuthProvider({ children }: PropsWithChildren<{}>) {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n\n  const signInTimer = useRef<number>();\n  const signOutTimer = useRef<number>();\n  const loginPromise = useRef<CancelablePromiseType<void>>();\n\n  const signIn: LoginFunction = useCallback(async (loginVars, onSuccess) => {\n    loginPromise.current = new CancelablePromise<void>((resolve) => {\n      signInTimer.current = window.setTimeout(() => {\n        setCurrentUser({\n          name: 'User',\n        });\n        onSuccess?.();\n        resolve();\n      }, 1000);\n    });\n    await loginPromise.current;\n  }, []);\n\n  const signOut: LogoutFunction = useCallback(async (onSuccess) => {\n    signOutTimer.current = await window.setTimeout(() => {\n      setCurrentUser(null);\n      onSuccess?.();\n    }, 500);\n  }, []);\n\n  useEffect(() => () => {\n    window.clearTimeout(signInTimer.current);\n    window.clearTimeout(signOutTimer.current);\n    loginPromise.current?.cancel();\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{\n      currentUser,\n      signIn,\n      signOut,\n    }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const authContext = useContext(AuthContext);\n  if (authContext === undefined) {\n    throw new Error('useAuth must be used within a AuthProvider');\n  }\n  return authContext;\n}\n","import React, { ReactElement } from 'react';\nimport {\n  Button,\n  ButtonProps,\n  CircularProgress,\n  CircularProgressProps,\n  makeStyles,\n  Theme,\n} from '@material-ui/core';\n\ninterface StyleProps {\n  /** Size of the CircularProgress */\n  progressSize: CircularProgressProps['size'];\n}\n\nconst DEFAULT_LOADING_PROGRESS_SIZE = 16;\n\nconst useStyles = makeStyles<Theme, StyleProps>(() => ({\n  buttonProgress: ({ progressSize }) => {\n    let size = DEFAULT_LOADING_PROGRESS_SIZE;\n    if (progressSize) {\n      size = typeof progressSize === 'number' ? progressSize : parseInt(progressSize, 10);\n    }\n    return ({\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -(size / 2),\n      marginLeft: -(size / 2),\n    });\n  },\n}));\n\ninterface LoadingButtonProps extends ButtonProps {\n  /** Whether or not the button should be in a loading state */\n  loading: boolean;\n  /** Props to apply to the CircularProgress component */\n  CircularProgressProps?: CircularProgressProps,\n}\n\n/** A button to indicate that an action is in progress */\nfunction LoadingButton({\n  loading,\n  CircularProgressProps: circularProgressProps = {\n    size: DEFAULT_LOADING_PROGRESS_SIZE,\n  },\n  ...props\n}: LoadingButtonProps): ReactElement {\n  const classes = useStyles({ progressSize: circularProgressProps.size });\n\n  return (\n    <div style={{ display: 'flex', alignItems: 'center' }}>\n      <div style={{ position: 'relative' }}>\n        <Button\n          variant=\"contained\"\n          disabled={loading}\n          {...props}\n        />\n        {loading && (\n        <CircularProgress\n          className={classes.buttonProgress}\n          {...circularProgressProps}\n        />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default LoadingButton;\n","import {\n  AppBar, Box, IconButton, Toolbar, Tooltip, Typography, useTheme,\n} from '@material-ui/core';\nimport { Brightness4, Brightness7, Menu } from '@material-ui/icons';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthProvider/AuthProvider';\nimport LoadingButton from '../../components/LoadingButton';\n\ninterface Props {\n  toggleTheme: VoidFunction;\n}\n\nfunction AppHeader({ toggleTheme }: Props) {\n  const theme = useTheme();\n  const { currentUser, signOut } = useAuth();\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const handleLogout = () => {\n    setLoading(true);\n    signOut(() => {\n      setLoading(false);\n      history.push('/login');\n    });\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        {currentUser && (\n          <Box mr={2}>\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n              <Menu />\n            </IconButton>\n          </Box>\n        )}\n        <Box flexGrow={1} clone>\n          <Typography variant=\"h6\">Aloha, My Home</Typography>\n        </Box>\n        <Tooltip title=\"Toggle Light/Dark Theme\">\n          <IconButton\n            color=\"inherit\"\n            onClick={toggleTheme}\n          >\n            {theme.palette.type === 'dark' ? <Brightness7 /> : <Brightness4 />}\n          </IconButton>\n        </Tooltip>\n        {currentUser && (\n          <Box ml={2}>\n            <LoadingButton\n              onClick={handleLogout}\n              loading={loading}\n            >\n              Logout\n            </LoadingButton>\n          </Box>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default AppHeader;\n","import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Container,\n  makeStyles,\n  TextField,\n} from '@material-ui/core';\nimport React from 'react';\nimport { Controller, SubmitHandler, useForm } from 'react-hook-form';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthProvider/AuthProvider';\nimport { LoginVars } from '../../types';\nimport LoadingButton from '../../components/LoadingButton';\n\nconst useStyles = makeStyles((theme) => ({\n  loginContainerRoot: {\n    display: 'flex',\n    flexGrow: 1,\n  },\n  loginCardRoot: {\n    alignSelf: 'center',\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 8),\n  },\n  loginCardContentRoot: {\n    padding: 0,\n  },\n  loginCardActionsRoot: {\n    justifyContent: 'space-between',\n    padding: 0,\n  },\n}));\n\ninterface LocationState {\n  from: {\n    pathname: string;\n  };\n}\n\nfunction LoginPage() {\n  const classes = useStyles();\n  const { signIn } = useAuth();\n  const history = useHistory();\n  const location = useLocation<LocationState>();\n\n  const {\n    formState,\n    errors,\n    handleSubmit,\n    control,\n  } = useForm<LoginVars>({\n    mode: 'all',\n    defaultValues: {\n      username: '',\n      password: '',\n    },\n  });\n\n  const handleLogin: SubmitHandler<LoginVars> = async (fieldValues) => {\n    const { from } = location.state || { from: { pathname: '/' } };\n    await signIn(\n      fieldValues,\n      () => {\n        history.replace(from);\n      },\n    );\n  };\n\n  return (\n    <Container\n      maxWidth=\"xs\"\n      classes={{\n        root: classes.loginContainerRoot,\n      }}\n    >\n      <Card\n        classes={{\n          root: classes.loginCardRoot,\n        }}\n        elevation={8}\n      >\n        <CardHeader title=\"Sign in\" style={{ textAlign: 'center' }} />\n        <CardContent\n          classes={{\n            root: classes.loginCardContentRoot,\n          }}\n        >\n          <form\n            id=\"login-form\"\n            autoComplete=\"off\"\n            onSubmit={handleSubmit(handleLogin)}\n          >\n            <Controller\n              control={control}\n              name=\"username\"\n              rules={{\n                required: 'This field is required.',\n              }}\n              render={(\n                {\n                  onChange, onBlur, value, name, ref,\n                },\n              ) => (\n                <TextField\n                  required\n                  fullWidth\n                  variant=\"outlined\"\n                  label=\"Username\"\n                  margin=\"normal\"\n                  error={!!errors.username}\n                  helperText={errors.username?.message || ' '}\n                  onChange={onChange}\n                  onBlur={onBlur}\n                  value={value}\n                  name={name}\n                  inputRef={ref}\n                />\n              )}\n            />\n            <Controller\n              control={control}\n              name=\"password\"\n              rules={{\n                required: 'This field is required.',\n              }}\n              render={(\n                {\n                  onChange, onBlur, value, name, ref,\n                },\n              ) => (\n                <TextField\n                  required\n                  fullWidth\n                  variant=\"outlined\"\n                  label=\"Password\"\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  margin=\"normal\"\n                  error={!!errors.password}\n                  helperText={errors.password?.message || ' '}\n                  onChange={onChange}\n                  onBlur={onBlur}\n                  value={value}\n                  name={name}\n                  inputRef={ref}\n                />\n              )}\n            />\n          </form>\n        </CardContent>\n        <CardActions\n          classes={{\n            root: classes.loginCardActionsRoot,\n          }}\n        >\n          <Button\n            disabled={formState.isSubmitting}\n            variant=\"outlined\"\n          >\n            Register\n          </Button>\n          <LoadingButton\n            type=\"submit\"\n            disabled={!formState.isValid || formState.isSubmitting}\n            loading={formState.isSubmitting}\n            variant=\"contained\"\n            form=\"login-form\"\n          >\n            Login\n          </LoadingButton>\n        </CardActions>\n      </Card>\n    </Container>\n  );\n}\n\nexport default LoginPage;\n","import React, { PropsWithChildren } from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\nimport { useAuth } from '../context/AuthProvider/AuthProvider';\n\nfunction PrivateRoute({ children, ...rest }: PropsWithChildren<RouteProps>) {\n  const { currentUser } = useAuth();\n  return (\n    <Route\n      /* eslint-disable-next-line react/jsx-props-no-spreading */\n      {...rest}\n      render={({ location }) => (currentUser ? (\n        children\n      ) : (\n        <Redirect\n          to={{\n            pathname: '/login',\n            state: { from: location },\n          }}\n        />\n      ))}\n    />\n  );\n}\n\nexport default PrivateRoute;\n","import {\n  createMuiTheme, CssBaseline, makeStyles, ThemeProvider, useMediaQuery,\n} from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { SnackbarProvider } from 'notistack';\nimport { AuthProvider } from '../context/AuthProvider/AuthProvider';\nimport AppHeader from './AppHeader/AppHeader';\nimport LoginPage from './LoginPage/LoginPage';\nimport ProtectedRoute from '../components/ProtectedRoute';\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    height: '100%',\n    width: '100%',\n    overflow: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const [darkTheme, setDarkTheme] = useState(\n    localStorage.getItem('prototype_theme') === 'true' || prefersDarkMode,\n  );\n\n  const toggleTheme = (): void => {\n    setDarkTheme((prev) => !prev);\n  };\n\n  const theme = React.useMemo(\n    () => createMuiTheme({\n      palette: {\n        type: darkTheme ? 'dark' : 'light',\n      },\n    }),\n    [darkTheme],\n  );\n\n  useEffect(() => {\n    localStorage.setItem('prototype_theme', darkTheme.toString());\n  }, [darkTheme]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <SnackbarProvider>\n        <AuthProvider>\n          <Router basename=\"/amh\">\n            <div className={classes.container}>\n              <AppHeader\n                toggleTheme={toggleTheme}\n              />\n              <Switch>\n                <ProtectedRoute exact path=\"/\">\n                  <div>\n                    Content Here\n                  </div>\n                </ProtectedRoute>\n                <Route path=\"/login\">\n                  <LoginPage />\n                </Route>\n              </Switch>\n            </div>\n          </Router>\n        </AuthProvider>\n      </SnackbarProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS,\n      getFID,\n      getFCP,\n      getLCP,\n      getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'fontsource-roboto/100.css';\nimport 'fontsource-roboto/300.css';\nimport 'fontsource-roboto/400.css';\nimport 'fontsource-roboto/500.css';\nimport 'fontsource-roboto/700.css';\nimport 'fontsource-roboto/900.css';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}