{"version":3,"sources":["context/AuthProvider/AuthProvider.tsx","App/AppHeader/AppHeader.tsx","components/LoadingButton.tsx","App/LoginPage/LoginPage.tsx","components/ProtectedRoute.tsx","App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["AuthContext","createContext","undefined","AuthProvider","children","useState","currentUser","setCurrentUser","signInTimer","useRef","signOutTimer","signin","useCallback","loginVars","onSuccess","current","window","setTimeout","name","signout","useEffect","clearTimeout","Provider","value","useAuth","authContext","useContext","Error","AppHeader","toggleTheme","theme","useTheme","history","useHistory","AppBar","position","Toolbar","Box","mr","IconButton","edge","color","aria-label","Menu","flexGrow","clone","Typography","variant","Tooltip","title","onClick","palette","type","Brightness7","Brightness4","ml","Button","push","useStyles","makeStyles","buttonProgress","progressSize","size","parseInt","top","left","marginTop","marginLeft","LoadingButton","loading","circularProgressProps","CircularProgressProps","props","classes","disabled","CircularProgress","className","loginContainerRoot","display","loginCardRoot","alignSelf","backgroundColor","background","paper","padding","spacing","loginCardContentRoot","loginCardActionsRoot","justifyContent","LoginPage","location","useLocation","useForm","mode","defaultValues","username","password","formState","errors","handleSubmit","control","Container","maxWidth","root","Card","elevation","CardHeader","style","textAlign","CardContent","id","autoComplete","onSubmit","fieldValues","from","state","pathname","replace","rules","required","render","onChange","onBlur","ref","TextField","fullWidth","label","margin","error","helperText","message","inputRef","CardActions","isSubmitting","isValid","form","PrivateRoute","rest","to","container","height","width","overflow","flexDirection","App","prefersDarkMode","useMediaQuery","localStorage","getItem","darkTheme","setDarkTheme","React","useMemo","createMuiTheme","setItem","toString","ThemeProvider","CssBaseline","basename","prev","ProtectedRoute","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.693610cc.chunk.js","sourcesContent":["import React, {\n  createContext, PropsWithChildren, useCallback, useContext, useEffect, useRef, useState,\n} from 'react';\nimport { LoginVars, User } from '../../types';\n\ntype LoginFunction = (loginVars: LoginVars, onSuccess?: (args?: any[]) => void) => void;\ntype LogoutFunction = (onSuccess?: (args?: any[]) => void) => void;\n\ninterface AuthContextState {\n  currentUser: User | null;\n  signin: LoginFunction;\n  signout: LogoutFunction;\n}\n\nconst AuthContext = createContext<AuthContextState | undefined>(undefined);\n\nexport function AuthProvider({ children }: PropsWithChildren<{}>) {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n\n  const signInTimer = useRef<number>();\n  const signOutTimer = useRef<number>();\n\n  const signin: LoginFunction = useCallback((loginVars, onSuccess) => {\n    signInTimer.current = window.setTimeout(() => {\n      setCurrentUser({\n        name: 'User',\n      });\n      onSuccess?.();\n    }, 1000);\n  }, []);\n\n  const signout: LogoutFunction = useCallback((onSuccess) => {\n    signOutTimer.current = window.setTimeout(() => {\n      setCurrentUser(null);\n      onSuccess?.();\n    }, 500);\n  }, []);\n\n  useEffect(() => () => {\n    window.clearTimeout(signInTimer.current);\n    window.clearTimeout(signOutTimer.current);\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{\n      currentUser,\n      signin,\n      signout,\n    }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const authContext = useContext(AuthContext);\n  if (authContext === undefined) {\n    throw new Error('useAuth must be used within a AuthProvider');\n  }\n  return authContext;\n}\n","import {\n  AppBar, Box, Button, IconButton, Toolbar, Tooltip, Typography, useTheme,\n} from '@material-ui/core';\nimport { Brightness4, Brightness7, Menu } from '@material-ui/icons';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthProvider/AuthProvider';\n\ninterface Props {\n  toggleTheme: VoidFunction;\n}\n\nfunction AppHeader({ toggleTheme }: Props) {\n  const theme = useTheme();\n  const { currentUser, signout } = useAuth();\n  const history = useHistory();\n\n  const handleLogout = () => {\n    signout(() => history.push('/login'));\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        {currentUser && (\n          <Box mr={2}>\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n              <Menu />\n            </IconButton>\n          </Box>\n        )}\n        <Box flexGrow={1} clone>\n          <Typography variant=\"h6\">Aloha, My Home</Typography>\n        </Box>\n        <Tooltip title=\"Toggle Light/Dark Theme\">\n          <IconButton\n            color=\"inherit\"\n            onClick={toggleTheme}\n          >\n            {theme.palette.type === 'dark' ? <Brightness7 /> : <Brightness4 />}\n          </IconButton>\n        </Tooltip>\n        {currentUser && (\n          <Box ml={2}>\n            <Button\n              onClick={handleLogout}\n              color=\"inherit\"\n            >\n              Logout\n            </Button>\n          </Box>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default AppHeader;\n","import React, { ReactElement } from 'react';\nimport {\n  Button,\n  ButtonProps,\n  CircularProgress,\n  CircularProgressProps,\n  makeStyles,\n  Theme,\n} from '@material-ui/core';\n\ninterface StyleProps {\n  /** Size of the CircularProgress */\n  progressSize: CircularProgressProps['size'];\n}\n\nconst useStyles = makeStyles<Theme, StyleProps>(() => ({\n  buttonProgress: ({ progressSize = 24 }) => {\n    const size = typeof progressSize === 'number' ? progressSize : parseInt(progressSize, 10);\n    return ({\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -(size / 2),\n      marginLeft: -(size / 2),\n    });\n  },\n}));\n\ninterface LoadingButtonProps extends ButtonProps {\n  /** Whether or not the button should be in a loading state */\n  loading: boolean;\n  /** Props to apply to the CircularProgress component */\n  CircularProgressProps?: CircularProgressProps,\n}\n\n/** A button to indicate that an action is in progress */\nfunction LoadingButton({\n  loading,\n  CircularProgressProps: circularProgressProps,\n  ...props\n}: LoadingButtonProps): ReactElement {\n  const classes = useStyles({ progressSize: circularProgressProps?.size });\n\n  return (\n    <>\n      <Button\n        variant=\"contained\"\n        disabled={loading}\n        {...props}\n      />\n      {loading && (\n        <CircularProgress className={classes.buttonProgress} {...circularProgressProps} />\n      )}\n    </>\n  );\n}\n\nexport default LoadingButton;\n","import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Container,\n  makeStyles,\n  TextField,\n} from '@material-ui/core';\nimport React from 'react';\nimport { Controller, SubmitHandler, useForm } from 'react-hook-form';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthProvider/AuthProvider';\nimport { LoginVars } from '../../types';\nimport LoadingButton from '../../components/LoadingButton';\n\nconst useStyles = makeStyles((theme) => ({\n  loginContainerRoot: {\n    display: 'flex',\n    flexGrow: 1,\n  },\n  loginCardRoot: {\n    alignSelf: 'center',\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 8),\n  },\n  loginCardContentRoot: {\n    padding: 0,\n  },\n  loginCardActionsRoot: {\n    justifyContent: 'space-between',\n    padding: 0,\n  },\n}));\n\ninterface LocationState {\n  from: {\n    pathname: string;\n  };\n}\n\nfunction LoginPage() {\n  const classes = useStyles();\n  const { signin } = useAuth();\n  const history = useHistory();\n  const location = useLocation<LocationState>();\n\n  const {\n    formState,\n    errors,\n    handleSubmit,\n    control,\n  } = useForm<LoginVars>({\n    mode: 'all',\n    defaultValues: {\n      username: '',\n      password: '',\n    },\n  });\n\n  const handleLogin: SubmitHandler<LoginVars> = (fieldValues) => {\n    const { from } = location.state || { from: { pathname: '/' } };\n    signin(\n      fieldValues,\n      () => { history.replace(from); },\n    );\n  };\n\n  return (\n    <Container\n      maxWidth=\"xs\"\n      classes={{\n        root: classes.loginContainerRoot,\n      }}\n    >\n      <Card\n        classes={{\n          root: classes.loginCardRoot,\n        }}\n        elevation={8}\n      >\n        <CardHeader title=\"Sign in\" style={{ textAlign: 'center' }} />\n        <CardContent\n          classes={{\n            root: classes.loginCardContentRoot,\n          }}\n        >\n          <form\n            id=\"login-form\"\n            autoComplete=\"off\"\n            onSubmit={handleSubmit(handleLogin)}\n          >\n            <Controller\n              control={control}\n              name=\"username\"\n              rules={{\n                required: 'This field is required.',\n              }}\n              render={(\n                {\n                  onChange, onBlur, value, name, ref,\n                },\n              ) => (\n                <TextField\n                  required\n                  fullWidth\n                  variant=\"outlined\"\n                  label=\"Username\"\n                  margin=\"normal\"\n                  error={!!errors.username}\n                  helperText={errors.username?.message || ' '}\n                  onChange={onChange}\n                  onBlur={onBlur}\n                  value={value}\n                  name={name}\n                  inputRef={ref}\n                />\n              )}\n            />\n            <Controller\n              control={control}\n              name=\"password\"\n              rules={{\n                required: 'This field is required.',\n              }}\n              render={(\n                {\n                  onChange, onBlur, value, name, ref,\n                },\n              ) => (\n                <TextField\n                  required\n                  fullWidth\n                  variant=\"outlined\"\n                  label=\"Password\"\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  margin=\"normal\"\n                  error={!!errors.password}\n                  helperText={errors.password?.message || ' '}\n                  onChange={onChange}\n                  onBlur={onBlur}\n                  value={value}\n                  name={name}\n                  inputRef={ref}\n                />\n              )}\n            />\n          </form>\n        </CardContent>\n        <CardActions\n          classes={{\n            root: classes.loginCardActionsRoot,\n          }}\n        >\n          <Button\n            disabled={formState.isSubmitting}\n            variant=\"outlined\"\n          >\n            Register\n          </Button>\n          <LoadingButton\n            type=\"submit\"\n            disabled={!formState.isValid || formState.isSubmitting}\n            loading={formState.isSubmitting}\n            variant=\"contained\"\n            form=\"login-form\"\n          >\n            Login\n          </LoadingButton>\n        </CardActions>\n      </Card>\n    </Container>\n  );\n}\n\nexport default LoginPage;\n","import React, { PropsWithChildren } from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\nimport { useAuth } from '../context/AuthProvider/AuthProvider';\n\nfunction PrivateRoute({ children, ...rest }: PropsWithChildren<RouteProps>) {\n  const { currentUser } = useAuth();\n  return (\n    <Route\n      /* eslint-disable-next-line react/jsx-props-no-spreading */\n      {...rest}\n      render={({ location }) => (currentUser ? (\n        children\n      ) : (\n        <Redirect\n          to={{\n            pathname: '/login',\n            state: { from: location },\n          }}\n        />\n      ))}\n    />\n  );\n}\n\nexport default PrivateRoute;\n","import {\n  createMuiTheme, CssBaseline, makeStyles, ThemeProvider, useMediaQuery,\n} from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { SnackbarProvider } from 'notistack';\nimport { AuthProvider } from '../context/AuthProvider/AuthProvider';\nimport AppHeader from './AppHeader/AppHeader';\nimport LoginPage from './LoginPage/LoginPage';\nimport ProtectedRoute from '../components/ProtectedRoute';\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    height: '100%',\n    width: '100%',\n    overflow: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const [darkTheme, setDarkTheme] = useState(\n    localStorage.getItem('prototype_theme') === 'true' || prefersDarkMode,\n  );\n\n  const toggleTheme = (): void => {\n    setDarkTheme((prev) => !prev);\n  };\n\n  const theme = React.useMemo(\n    () => createMuiTheme({\n      palette: {\n        type: darkTheme ? 'dark' : 'light',\n      },\n    }),\n    [darkTheme],\n  );\n\n  useEffect(() => {\n    localStorage.setItem('prototype_theme', darkTheme.toString());\n  }, [darkTheme]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <SnackbarProvider>\n        <AuthProvider>\n          <Router basename=\"/amh\">\n            <div className={classes.container}>\n              <AppHeader\n                toggleTheme={toggleTheme}\n              />\n              <Switch>\n                <ProtectedRoute exact path=\"/\">\n                  <div>\n                    Content Here\n                  </div>\n                </ProtectedRoute>\n                <Route path=\"/login\">\n                  <LoginPage />\n                </Route>\n              </Switch>\n            </div>\n          </Router>\n        </AuthProvider>\n      </SnackbarProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS,\n      getFID,\n      getFCP,\n      getLCP,\n      getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}